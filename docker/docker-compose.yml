version: '3.7'

services:
  certbot:
    image: certbot/certbot
    volumes:
      - ./volumes/certbot/conf:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - rili-network
  rili-nginx:
    build:
      context: ../
      dockerfile: docker/nginx.Dockerfile
    ports:
      - 80:80
      - 443:443
    environment:
      - NGINX_PORT=80
    volumes:
      - ./volumes/certbot/conf:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/certbot
    networks:
      - rili-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  rili-client-web:
    build:
      context: ../
      dockerfile: docker/rili-client-web.Dockerfile
      args:
        - NODE_VERSION=${NODE_VERSION}
    ports:
      - 7070:7070
    networks:
      - rili-network
  rili-server-api:
    build:
      context: ../
      dockerfile: docker/rili-server-api.Dockerfile
      args:
        - NODE_VERSION=${NODE_VERSION}
    ports:
      - 7770:7770
    networks:
      - rili-network
  rili-server-socket:
    build:
      context: ../
      dockerfile: docker/rili-server-socket.Dockerfile
      args:
        - NODE_VERSION=${NODE_VERSION}
    ports:
      - 7743:7743
    networks:
      - rili-network
    depends_on:
      - rili-redis-pub
      - rili-redis-sub
  rili-redis-pub:
    image: redis:5
    deploy:
      replicas: 1
      update_config:
        delay: 10s
      restart_policy:
        condition: on-failure
    ports:
      - 17771:6379
    networks:
      - rili-network
  rili-redis-sub:
    image: redis:5
    deploy:
      replicas: 1
      update_config:
        delay: 10s
      restart_policy:
        condition: on-failure
    ports:
      - 17772:6379
    networks:
      - rili-network

networks:
  rili-network:
    driver: overlay
    attachable: true
