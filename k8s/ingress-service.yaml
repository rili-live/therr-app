apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout http_502"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "360"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "360"
    nginx.ingress.kubernetes.io/use-regex: "true"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: “3600”
    # nginx.ingress.kubernetes.io/proxy-send-timeout: “3600”
spec:
  tls:
  - hosts:
      - therr.com
      - www.therr.com
      - api.therr.com
      - www.api.therr.com
      - websocket-service.therr.com
      - www.websocket-service.therr.com
    secretName: therr-network-secret
  rules:
  - host: therr.com
    http:
      paths:
      - path: /?(.*)
        backend:
          serviceName: client-cluster-ip-service
          servicePort: 7070
  - host: www.therr.com
    http:
      paths:
      - path: /?(.*)
        backend:
          serviceName: client-cluster-ip-service
          servicePort: 7070
  - host: api.therr.com
    http:
      paths:
      - path: /?(.*)
        backend:
          serviceName: api-gateway-service-cluster-ip-service
          servicePort: 7770
  - host: www.api.therr.com
    http:
      paths:
      - path: /?(.*)
        backend:
          serviceName: api-gateway-service-cluster-ip-service
          servicePort: 7770
  - host: websocket-service.therr.com
    http:
      paths:
      - path: /?(.*)
        backend:
          serviceName: websocket-service-cluster-ip-service
          servicePort: 7743
  - host: www.websocket-service.therr.com
    http:
      paths:
      - path: /?(.*)
        backend:
          serviceName: websocket-service-cluster-ip-service
          servicePort: 7743

          