/* eslint-disable quotes, max-len */
import { expect } from 'chai';
import formatSqlJoinAsJson from '../src/format-sql-join-as-json';

describe('formatSqlJoinAsJson', () => {
    it('correctly formats a complex JOIN', () => {
        const expected = [
            {
                id: 8,
                requestingUserId: 7,
                acceptingUserId: 8,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:37.595Z',
                updatedAt: '2020-12-30T17:31:20.423Z',
                users: [
                    {
                        id: 7,
                        userName: 'zanselm5',
                        firstName: 'Zack',
                        lastName: 'Anselm',
                    },
                    {
                        id: 8,
                        userName: 'rili',
                        firstName: 'Rili',
                        lastName: 'Main',
                    },
                ],
            },
            {
                id: 9,
                requestingUserId: 7,
                acceptingUserId: 9,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:42.820Z',
                updatedAt: '2020-12-30T17:32:20.343Z',
                users: [
                    {
                        id: 7,
                        userName: 'zanselm5',
                        firstName: 'Zack',
                        lastName: 'Anselm',
                    },
                    {
                        id: 9,
                        userName: 'therr',
                        firstName: 'Therr',
                        lastName: 'Main',
                    },
                ],
            },
        ];
        const mockDataArray = [
            {
                id: 8,
                requestingUserId: 7,
                acceptingUserId: 8,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:37.595Z',
                updatedAt: '2020-12-30T17:31:20.423Z',
                'users[].id': 7,
                'users[].userName': 'zanselm5',
                'users[].firstName': 'Zack',
                'users[].lastName': 'Anselm',
            },
            {
                id: 8,
                requestingUserId: 7,
                acceptingUserId: 8,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:37.595Z',
                updatedAt: '2020-12-30T17:31:20.423Z',
                'users[].id': 8,
                'users[].userName': 'rili',
                'users[].firstName': 'Rili',
                'users[].lastName': 'Main',
            },
            {
                id: 9,
                requestingUserId: 7,
                acceptingUserId: 9,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:42.820Z',
                updatedAt: '2020-12-30T17:32:20.343Z',
                'users[].id': 7,
                'users[].userName': 'zanselm5',
                'users[].firstName': 'Zack',
                'users[].lastName': 'Anselm',
            },
            {
                id: 9,
                requestingUserId: 7,
                acceptingUserId: 9,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:42.820Z',
                updatedAt: '2020-12-30T17:32:20.343Z',
                'users[].id': 9,
                'users[].userName': 'therr',
                'users[].firstName': 'Therr',
                'users[].lastName': 'Main',
            },
        ];
        const mockArrayPropKeys = [{ propKey: 'users' }];

        const formatted = formatSqlJoinAsJson(mockDataArray, mockArrayPropKeys);

        expect(formatted).to.be.deep.equal(expected);
    });

    it('correctly formats a empty JOIN rows', () => {
        const expected: any = [
            {
                id: 8,
                requestingUserId: 7,
                acceptingUserId: 8,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:37.595Z',
                updatedAt: '2020-12-30T17:31:20.423Z',
                users: [],
            },
            {
                id: 9,
                requestingUserId: 7,
                acceptingUserId: 9,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:42.820Z',
                updatedAt: '2020-12-30T17:32:20.343Z',
                users: [],
            },
        ];
        const mockDataArray: any = [
            {
                id: 8,
                requestingUserId: 7,
                acceptingUserId: 8,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:37.595Z',
                updatedAt: '2020-12-30T17:31:20.423Z',
                'users[].id': null,
                'users[].userName': null,
                'users[].firstName': null,
                'users[].lastName': null,
            },
            {
                id: 8,
                requestingUserId: 7,
                acceptingUserId: 8,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:37.595Z',
                updatedAt: '2020-12-30T17:31:20.423Z',
                'users[].id': null,
                'users[].userName': null,
                'users[].firstName': null,
                'users[].lastName': null,
            },
            {
                id: 9,
                requestingUserId: 7,
                acceptingUserId: 9,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:42.820Z',
                updatedAt: '2020-12-30T17:32:20.343Z',
                'users[].id': null,
                'users[].userName': null,
                'users[].firstName': null,
                'users[].lastName': null,
            },
            {
                id: 9,
                requestingUserId: 7,
                acceptingUserId: 9,
                interactionCount: 1,
                requestStatus: 'complete',
                isConnectionBroken: false,
                createdAt: '2020-12-30T17:30:42.820Z',
                updatedAt: '2020-12-30T17:32:20.343Z',
                'users[].id': null,
                'users[].userName': null,
                'users[].firstName': null,
                'users[].lastName': null,
            },
        ];
        const mockArrayPropKeys = [{ propKey: 'users' }];

        const formatted = formatSqlJoinAsJson(mockDataArray, mockArrayPropKeys);

        expect(formatted).to.be.deep.equal(expected);
    });

    it('correctly formats non-id lists', () => {
        const expected: any = [
            {
                id: 5,
                authorId: 8,
                authorLocale: 'en-us',
                administratorIds: '8',
                title: 'One Coool Hosted Chat',
                subtitle: 'Man, this is coooool',
                description: 'This gist is that it\'s cool.',
                hashTags: 'cool,awesome',
                integrationIds: '',
                invitees: '',
                iconGroup: 'font-awesome-5',
                iconId: 'star',
                iconColor: 'black',
                maxCommentsPerMin: 50,
                doesExpire: true,
                isPublic: true,
                createdAt: '2021-02-22T20:45:53.418Z',
                updatedAt: '2021-02-22T20:45:53.418Z',
                categories: [{
                    tag: 'movies',
                    name: 'movies',
                    iconGroup: 'font-awesome-5',
                    iconId: 'video',
                    iconColor: '#ebc300',
                }, {
                    tag: 'music',
                    name: 'music',
                    iconGroup: 'font-awesome-5',
                    iconId: 'music',
                    iconColor: 'blue',
                }],
            },
            {
                id: 6,
                authorId: 8,
                authorLocale: 'en-us',
                administratorIds: '8',
                title: 'One Coool Hosted Chat',
                subtitle: 'Man, this is coooool',
                description: 'This gist is that it\'s cool.',
                hashTags: 'cool,awesome',
                integrationIds: '',
                invitees: '',
                iconGroup: 'font-awesome-5',
                iconId: 'star',
                iconColor: 'black',
                maxCommentsPerMin: 50,
                doesExpire: true,
                isPublic: true,
                createdAt: '2021-02-22T20:45:53.418Z',
                updatedAt: '2021-02-22T20:45:53.418Z',
                categories: [{
                    tag: 'movies',
                    name: 'movies',
                    iconGroup: 'font-awesome-5',
                    iconId: 'video',
                    iconColor: '#ebc300',
                }],
            },
        ];
        const mockDataArray: any = [
            {
                id: 5,
                authorId: 8,
                authorLocale: 'en-us',
                administratorIds: '8',
                title: 'One Coool Hosted Chat',
                subtitle: 'Man, this is coooool',
                description: 'This gist is that it\'s cool.',
                hashTags: 'cool,awesome',
                integrationIds: '',
                invitees: '',
                iconGroup: 'font-awesome-5',
                iconId: 'star',
                iconColor: 'black',
                maxCommentsPerMin: 50,
                doesExpire: true,
                isPublic: true,
                createdAt: '2021-02-22T20:45:53.418Z',
                updatedAt: '2021-02-22T20:45:53.418Z',
                'categories[].tag': 'movies',
                'categories[].name': 'movies',
                'categories[].iconGroup': 'font-awesome-5',
                'categories[].iconId': 'video',
                'categories[].iconColor': '#ebc300',
            },
            {
                id: 5,
                authorId: 8,
                authorLocale: 'en-us',
                administratorIds: '8',
                title: 'One Coool Hosted Chat',
                subtitle: 'Man, this is coooool',
                description: 'This gist is that it\'s cool.',
                hashTags: 'cool,awesome',
                integrationIds: '',
                invitees: '',
                iconGroup: 'font-awesome-5',
                iconId: 'star',
                iconColor: 'black',
                maxCommentsPerMin: 50,
                doesExpire: true,
                isPublic: true,
                createdAt: '2021-02-22T20:45:53.418Z',
                updatedAt: '2021-02-22T20:45:53.418Z',
                'categories[].tag': 'music',
                'categories[].name': 'music',
                'categories[].iconGroup': 'font-awesome-5',
                'categories[].iconId': 'music',
                'categories[].iconColor': 'blue',
            },
            {
                id: 6,
                authorId: 8,
                authorLocale: 'en-us',
                administratorIds: '8',
                title: 'One Coool Hosted Chat',
                subtitle: 'Man, this is coooool',
                description: 'This gist is that it\'s cool.',
                hashTags: 'cool,awesome',
                integrationIds: '',
                invitees: '',
                iconGroup: 'font-awesome-5',
                iconId: 'star',
                iconColor: 'black',
                maxCommentsPerMin: 50,
                doesExpire: true,
                isPublic: true,
                createdAt: '2021-02-22T20:45:53.418Z',
                updatedAt: '2021-02-22T20:45:53.418Z',
                'categories[].tag': 'movies',
                'categories[].name': 'movies',
                'categories[].iconGroup': 'font-awesome-5',
                'categories[].iconId': 'video',
                'categories[].iconColor': '#ebc300',
            },
        ];
        const mockArrayPropKeys = [{ propKey: 'categories', propId: 'tag' }];

        const formatted = formatSqlJoinAsJson(mockDataArray, mockArrayPropKeys);

        expect(formatted).to.be.deep.equal(expected);
    });
});
