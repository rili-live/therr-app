{"version":3,"sources":["webpack:///./src/routes/index.ts","webpack:///./src/routes/page-not-found.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yFAAmC;AACnC,0EAA0B;AAC1B,wGAA4C;AAc5C,IAAI,MAAM,GAAa;IACnB;QACI,IAAI,EAAE,GAAG;QACT,SAAS,EAAE,cAAI;QACf,KAAK,EAAE,IAAI;KACd;IACD;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,mBAAQ;QACnB,KAAK,EAAE,IAAI;KACd;IACD,IAAI;IACJ,qBAAqB;IACrB,uBAAuB;IACvB,iBAAiB;IACjB,KAAK;IACL,IAAI;IACJ,wBAAwB;IACxB,0BAA0B;IAC1B,iBAAiB;IACjB,KAAK;IAEL,iDAAiD;IACjD;QACI,WAAW,EAAE,wBAAY;KAC5B;CACJ,CAAC;AAEF,kBAAe,MAAM,CAAC;;;;;;;;;;;;;;;AC5CtB,iFAA+B;AAC/B,uHAAmE;AAEnE,2LAA+E;AAC/E,uGAAgD;AAChD,iGAA0D;AAiB1D,wBAAwB;AACxB,MAAM,OAAO,GAAG,YAAY,CAAC,aAAoB,CAAC,CAAC;AAEnD;;GAEG;AACH,MAAa,qBAAsB,SAAQ,KAAK,CAAC,SAA8E;IAG3H,YAAY,KAAsD;QAC9D,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,CAAC,SAAS,GAAG,CAAC,GAAW,EAAE,MAAW,EAAE,EAAE,CAAC,oBAAU,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;IACpF,CAAC;IAED,iBAAiB;QACb,QAAQ,CAAC,KAAK,GAAG,uBAAuB,CAAC;IAC7C,CAAC;IAED,MAAM;QACF,OAAO,CACH,oBAAC,8BAAM,kBAAC,UAAU,EAAE,GAAG,IAAM,IAAI,CAAC,KAAK;YACnC;gBACI,uDAA6B,CAC3B,CACD,CACZ,CAAC;IACN,CAAC;CACJ;AAxBD,sDAwBC;AAED,kBAAe,6BAAU,CAAC,qBAAqB,CAAC,CAAC","file":"app.9d3d0fda9948878981fe.hot-update.js","sourcesContent":["import ChatRoom from './chat-room';\nimport Home from './home';\nimport PageNotFound from './page-not-found';\nimport { RouteProps } from 'react-router-dom';\n// import Login from './components/pages/Login';\n// import NotFound from './components/pages/NotFound';\n// import Register from './components/pages/Register';\n\nexport interface IRoute extends RouteProps {\n    access?: any;\n    exact?: boolean;\n    fetchData?: Function;\n    // Overriding this property allows us to add custom paramaters to React components\n    component: any;\n}\n\nlet routes: IRoute[] = [\n    {\n        path: '/',\n        component: Home,\n        exact: true\n    },\n    {\n        path: '/chat-room',\n        component: ChatRoom,\n        exact: true\n    },\n    // {\n    // \t'path': '/login',\n    // \t'component': Login,\n    // \t'exact': true\n    // },\n    // {\n    // \t'path': '/register',\n    // \t'component': Register,\n    // \t'exact': true\n    // },\n\n    // If no route matches, return NotFound component\n    {\n        'component': PageNotFound\n    }\n];\n\nexport default routes;","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport * as io from 'socket.io-client';\nimport Status from 'rili-public-library/react-components/redirect-with-status';\nimport translator from '../services/translator';\nimport * as globalConfig from '../../../global-config.js';\n\ninterface IPageNotFoundRouterProps {\n\n}\n\ninterface IPageNotFoundProps extends RouteComponentProps<IPageNotFoundRouterProps> {\n// Add your regular properties here\n}\n\ninterface IPageNotFoundDispatchProps {\n// Add your dispatcher properties here\n}\n\ninterface IPageNotFoundState {\n}\n\n// Environment Variables\nconst envVars = globalConfig[process.env.NODE_ENV];\n\n/**\n * PageNotFound\n */\nexport class PageNotFoundComponent extends React.Component<IPageNotFoundProps & IPageNotFoundDispatchProps, IPageNotFoundState> {\n    private translate: Function;\n\n    constructor(props: IPageNotFoundProps & IPageNotFoundDispatchProps) {\n        super(props);\n\n        this.state = {};\n\n        this.translate = (key: string, params: any) => translator('en-us', key, params);\n    }\n\n    componentDidMount() {\n        document.title = 'Rili | Page Not Found';\n    }\n\n    render() {\n        return (\n            <Status statusCode={404} {...this.props}>\n                <div>\n                    <h1>404 | Page not found</h1>\n                </div>\n            </Status>\n        );\n    }\n}\n\nexport default withRouter(PageNotFoundComponent);"],"sourceRoot":""}