{"version":3,"sources":["webpack:///./src/routes/home.tsx","webpack:///./src/routes/index.ts"],"names":[],"mappings":"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","file":"server-client.7e5e0ce723ceb49e655e.hot-update.js","sourcesContent":["import SocketActions from 'actions/socket';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport Input from 'rili-public-library/react-components/input';\nimport ButtonSecondary from 'rili-public-library/react-components/button-secondary';\nimport { ISocketState } from '../redux/reducers/socket';\nimport translator from '../services/translator';\n// import * as globalConfig from '../../../global-config.js';\n\ninterface IHomeRouterProps {\n}\n\ninterface IHomeDispatchProps {\n    joinRoom: Function;\n}\n\ninterface IStoreProps extends IHomeDispatchProps {\n    socket: ISocketState;\n}\n\n// Regular component props\ninterface IHomeProps extends RouteComponentProps<IHomeRouterProps>, IStoreProps {\n}\n\ninterface IHomeState {\n    hasJoinedARoom: boolean;\n    inputs: any;\n    roomsList: any;\n}\n\n// Environment Variables\n// const envVars = globalConfig[process.env.NODE_ENV];\n\nconst mapStateToProps = (state: any) => {\n    return {\n        socket: state.socket,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return bindActionCreators({\n        joinRoom: SocketActions.joinRoom,\n    }, dispatch);\n};\n\n// const handleSessionUpdate = (message: any) => {\n//     console.log('SESSION_UPDATE:', message); // tslint:disable-line no-console\n// };\n\n/**\n * Home\n */\nexport class HomeComponent extends React.Component<IHomeProps, IHomeState> {\n    // private sessionToken: string;\n    private translate: Function;\n\n    constructor(props: IHomeProps) {\n        super(props);\n\n        this.state = {\n            hasJoinedARoom: false,\n            inputs: {\n                roomId: 'general-chat'\n            },\n            roomsList: [],\n        };\n\n        // this.sessionToken = '';\n        this.translate = (key: string, params: any) => translator('en-us', key, params);\n\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onButtonClick = this.onButtonClick.bind(this);\n        this.shouldDisableInput = this.shouldDisableInput.bind(this);\n    }\n\n    componentDidMount() {\n        document.title = 'Rili | Home';\n    }\n\n    onInputChange(name: string, value: string) {\n        const newInputChanges = {\n            [name]: value,\n        };\n        this.setState({\n            inputs: {\n                ...this.state.inputs,\n                ...newInputChanges\n            }\n        });\n    }\n\n    onButtonClick(event: any) {\n        switch (event.target.id) {\n            case 'join_room':\n            case 'room_name':\n            case 'user_name':\n            if (!this.shouldDisableInput('room')) {\n                this.props.joinRoom({\n                    roomId: this.state.inputs.roomId,\n                    userName: this.state.inputs.userName\n                });\n                this.props.history.push('/chat-room');\n            }\n        }\n    }\n\n    shouldDisableInput(buttonName: string) {\n        switch (buttonName) {\n            case 'room':\n                return !this.state.inputs.roomId || !this.state.inputs.userName;\n        }\n    }\n\n    public render(): JSX.Element | null {\n        console.log('PROPS: ', this.props); //tslint:disable-line\n        const { socket } = this.props;\n\n        return (\n            <div>\n                <hr />\n\n                <label htmlFor=\"user_name\">Username:</label>\n                <Input type=\"text\" id=\"user_name\" name=\"userName\" onChange={this.onInputChange} onEnter={this.onButtonClick} translate={this.translate} />\n\n                <label htmlFor=\"room_name\">Room:</label>\n                <Input type=\"text\" id=\"room_name\" name=\"roomId\" value={this.state.inputs.roomId} onChange={this.onInputChange} onEnter={this.onButtonClick} translate={this.translate} />\n                {\n                    socket && socket.rooms &&\n                    <span id=\"rooms_list\">\n                        {\n                            socket.rooms.length < 1\n                                ? <i>No rooms are currently active. Click 'Join Room' to start a new one.</i>\n                                : <span>Active Rooms: <i>{socket.rooms.map(room => `${room.roomKey}, `)}</i></span>\n                        }\n                    </span>\n                }\n                <br />\n\n                <div className=\"form-field\">\n                    <ButtonSecondary id=\"join_room\" text=\"Join Room\" onClick={this.onButtonClick} disabled={this.shouldDisableInput('room')} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeComponent));","import ChatRoom from './chat-room';\nimport Home from './home';\nimport PageNotFound from './page-not-found';\nimport { RouteProps } from 'react-router-dom';\n// import Login from './components/pages/Login';\n// import NotFound from './components/pages/NotFound';\n// import Register from './components/pages/Register';\n\nexport interface IRoute extends RouteProps {\n    access?: any;\n    exact?: boolean;\n    fetchData?: Function;\n    // Overriding this property allows us to add custom paramaters to React components\n    component: any;\n}\n\nlet routes: IRoute[] = [\n    {\n        path: '/',\n        component: Home,\n        exact: true\n    },\n    {\n        path: '/chat-room',\n        component: ChatRoom,\n        exact: true\n    },\n    // {\n    // \t'path': '/login',\n    // \t'component': Login,\n    // \t'exact': true\n    // },\n    // {\n    // \t'path': '/register',\n    // \t'component': Register,\n    // \t'exact': true\n    // },\n\n    // If no route matches, return NotFound component\n    {\n        'component': PageNotFound\n    }\n];\n\nexport default routes;"],"sourceRoot":""}